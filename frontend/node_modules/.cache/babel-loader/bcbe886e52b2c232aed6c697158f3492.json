{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\binel\\\\OneDrive\\\\Desktop\\\\todo_list_ReactJs\\\\src\\\\pages\\\\NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import notes from '../assets/data'\n\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = () => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let navigate = useNavigate(); // let note = notes.find(note => note.id === Number(id))\n\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [id]);\n\n  let getNote = async () => {\n    if (id === 'new') return;\n    let response = await fetch(`/api/notes/${id}`);\n    let data = await response.json();\n    setNote(data);\n  };\n\n  let createNote = async () => {\n    await fetch(`/api/notes/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n\n  let updateNote = async () => {\n    fetch(`/api/notes/${id}/update/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n\n  let deleteNote = async () => {\n    await fetch(`/api/notes/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n    navigate('/');\n  };\n\n  let handleSubmit = () => {\n    if (id !== 'new' && note.body == '') {\n      deleteNote();\n    } else if (id !== \"new\") {\n      updateNote();\n    } else if (id === 'new' && note !== null) {\n      createNote();\n    }\n\n    navigate('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), id !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({ ...note,\n          'body': e.target.value\n        });\n      },\n      placeholder: \"Edit note\",\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotePage, \"UsVjU7Be0kCDVdSePH0/u2Te9u4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Link","ReactComponent","ArrowLeft","NotePage","id","navigate","note","setNote","getNote","response","fetch","data","json","createNote","method","headers","body","JSON","stringify","updateNote","deleteNote","handleSubmit","e","target","value"],"sources":["C:/Users/binel/OneDrive/Desktop/todo_list_ReactJs/src/pages/NotePage.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\n// import notes from '../assets/data'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\r\n\r\nconst NotePage = () => {\r\n    let {id} = useParams();\r\n    let navigate = useNavigate();\r\n    // let note = notes.find(note => note.id === Number(id))\r\n    let [note, setNote] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        getNote()\r\n    },[id])\r\n\r\n    let getNote = async () => {\r\n        if (id === 'new') return\r\n        let response = await fetch(`/api/notes/${id}`)\r\n        let data = await response.json()\r\n        setNote(data)\r\n    }\r\n\r\n    let createNote = async () => {\r\n        await fetch(`/api/notes/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(note)\r\n        })\r\n    }\r\n\r\n    let updateNote = async () => {\r\n        fetch(`/api/notes/${id}/update/`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(note)\r\n        })\r\n    }\r\n\r\n    let deleteNote = async () => {\r\n        await fetch(`/api/notes/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(note)\r\n        })\r\n        navigate('/')\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if (id !== 'new' && note.body == '') {\r\n            deleteNote()\r\n        } else if (id !== \"new\") {\r\n            updateNote()\r\n        } else if (id === 'new' && note !== null) {\r\n            createNote()\r\n        }\r\n        navigate('/')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='note'>\r\n            <div className='note-header'>\r\n                <h3>\r\n                    \r\n                        <ArrowLeft onClick={handleSubmit} />\r\n                \r\n                </h3>\r\n                {id !== 'new' ? (\r\n                    <button onClick={deleteNote}>Delete</button>\r\n                ): (\r\n                    <button onClick={handleSubmit}>Done</button>\r\n                )}\r\n            </div>\r\n            <textarea onChange={(e) => {setNote({...note, 'body': e.target.value})}} placeholder=\"Edit note\" value={note?.body}></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotePage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}